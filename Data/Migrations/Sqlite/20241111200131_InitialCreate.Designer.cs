// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using monchotradebackend.data;

#nullable disable

namespace monchotradeBackend.Data.Migrations.Sqlite
{
    [DbContext(typeof(MonchoDbContext))]
    [Migration("20241111200131_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("monchotradebackend.models.entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Home Decor"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Footwear"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Office Supplies"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Fitness"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("monchotradebackend.models.entities.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("InitiatorProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InitiatorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReceiverProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReceiverUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("InitiatorProductId");

                    b.HasIndex("ReceiverProductId");

                    b.HasIndex("Status");

                    b.HasIndex("InitiatorUserId", "Status");

                    b.HasIndex("ReceiverUserId", "Status");

                    b.ToTable("Exchanges", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7844),
                            InitiatorProductId = 1,
                            InitiatorUserId = 1,
                            Notes = "Interested in exchanging my jeans for your headphones",
                            ReceiverProductId = 3,
                            ReceiverUserId = 2,
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7848),
                            InitiatorProductId = 5,
                            InitiatorUserId = 3,
                            Notes = "Would like to exchange my sneakers for your charger",
                            ReceiverProductId = 7,
                            ReceiverUserId = 4,
                            Status = "Accepted"
                        });
                });

            modelBuilder.Entity("monchotradebackend.models.entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7386),
                            Description = "Classic blue jeans for everyday wear",
                            IsActive = true,
                            Name = "Men's Jeans",
                            Quantity = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7390),
                            Description = "Comfortable cotton t-shirt, perfect for casual outings",
                            IsActive = true,
                            Name = "Casual T-Shirt",
                            Quantity = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7393),
                            Description = "Stylish white formal shirt, perfect for office",
                            IsActive = true,
                            Name = "Formal Shirt",
                            Quantity = 11,
                            UserId = 5
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7446),
                            Description = "Comfortable black dress pants for formal events",
                            IsActive = true,
                            Name = "Dress Pants",
                            Quantity = 6,
                            UserId = 5
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7464),
                            Description = "Stylish and warm winter jacket",
                            IsActive = true,
                            Name = "Men's Jacket",
                            Quantity = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7471),
                            Description = "Soft wool scarf for cold weather",
                            IsActive = true,
                            Name = "Wool Scarf",
                            Quantity = 7,
                            UserId = 8
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7473),
                            Description = "Comfortable cotton hoodie",
                            IsActive = true,
                            Name = "Cotton Hoodie",
                            Quantity = 8,
                            UserId = 17
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7489),
                            Description = "Adjustable sports cap",
                            IsActive = true,
                            Name = "Sports Cap",
                            Quantity = 15,
                            UserId = 17
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7492),
                            Description = "Comfortable everyday pants",
                            IsActive = true,
                            Name = "Pants",
                            Quantity = 6,
                            UserId = 20
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7495),
                            Description = "Warm sweater for winter",
                            IsActive = true,
                            Name = "Sweater",
                            Quantity = 15,
                            UserId = 20
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7498),
                            Description = "Fast-charging USB-C charger",
                            IsActive = true,
                            Name = "Smartphone Charger",
                            Quantity = 15,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7502),
                            Description = "10,000mAh power bank for mobile devices",
                            IsActive = true,
                            Name = "Power Bank",
                            Quantity = 9,
                            UserId = 4
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7505),
                            Description = "Sporty digital watch with water resistance",
                            IsActive = true,
                            Name = "Digital Watch",
                            Quantity = 14,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7507),
                            Description = "Tracks steps, calories, and more",
                            IsActive = true,
                            Name = "Fitness Tracker",
                            Quantity = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7515),
                            Description = "Polarized sunglasses with UV protection",
                            IsActive = true,
                            Name = "Sunglasses",
                            Quantity = 10,
                            UserId = 16
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7537),
                            Description = "Classic leather wallet with multiple compartments",
                            IsActive = true,
                            Name = "Leather Wallet",
                            Quantity = 9,
                            UserId = 16
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7540),
                            Description = "Noise-cancelling headphones with high-quality sound",
                            IsActive = true,
                            Name = "Wireless Headphones",
                            Quantity = 8,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7543),
                            Description = "Portable speaker with long battery life",
                            IsActive = true,
                            Name = "Bluetooth Speaker",
                            Quantity = 12,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7546),
                            Description = "10-inch tablet with high-resolution display",
                            IsActive = true,
                            Name = "Tablet",
                            Quantity = 6,
                            UserId = 9
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7548),
                            Description = "Protective case for 10-inch tablet",
                            IsActive = true,
                            Name = "Tablet Case",
                            Quantity = 10,
                            UserId = 9
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7551),
                            Description = "High-precision gaming mouse",
                            IsActive = true,
                            Name = "Gaming Mouse",
                            Quantity = 6,
                            UserId = 13
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7554),
                            Description = "Tactile mechanical keyboard",
                            IsActive = true,
                            Name = "Mechanical Keyboard",
                            Quantity = 5,
                            UserId = 13
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7556),
                            Description = "Programmable smart thermostat",
                            IsActive = true,
                            Name = "Smart Thermostat",
                            Quantity = 5,
                            UserId = 15
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7559),
                            Description = "Compact air purifier for small rooms",
                            IsActive = true,
                            Name = "Air Purifier",
                            Quantity = 3,
                            UserId = 15
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7562),
                            Description = "Compact charger for mobile devices",
                            IsActive = true,
                            Name = "Portable Charger",
                            Quantity = 14,
                            UserId = 18
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7566),
                            Description = "Set of 3 USB cables",
                            IsActive = true,
                            Name = "USB Cable Set",
                            Quantity = 12,
                            UserId = 18
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7568),
                            Description = "Non-stick cookware set",
                            IsActive = true,
                            Name = "Cookware Set",
                            Quantity = 6,
                            UserId = 19
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7576),
                            Description = "Stainless steel knives for every need",
                            IsActive = true,
                            Name = "Knife Set",
                            Quantity = 7,
                            UserId = 19
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7579),
                            Description = "Elegant ceramic vase for home decor",
                            IsActive = true,
                            Name = "Ceramic Vase",
                            Quantity = 7,
                            UserId = 12
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7581),
                            Description = "Soft pillow with a decorative cover",
                            IsActive = true,
                            Name = "Decorative Pillow",
                            Quantity = 10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7584),
                            Description = "Modern abstract wall art",
                            IsActive = true,
                            Name = "Wall Art",
                            Quantity = 4,
                            UserId = 14
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7587),
                            Description = "Stylish table lamp with adjustable brightness",
                            IsActive = true,
                            Name = "Table Lamp",
                            Quantity = 8,
                            UserId = 14
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7589),
                            Description = "Comfortable and durable sports shoes",
                            IsActive = true,
                            Name = "Sports Sneakers",
                            Quantity = 7,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7592),
                            Description = "Lightweight running shoes for everyday exercise",
                            IsActive = true,
                            Name = "Running Shoes",
                            Quantity = 10,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7595),
                            Description = "Ergonomic stand for laptops",
                            IsActive = true,
                            Name = "Laptop Stand",
                            Quantity = 8,
                            UserId = 6
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7597),
                            Description = "Compact wireless mouse for convenience",
                            IsActive = true,
                            Name = "Wireless Mouse",
                            Quantity = 13,
                            UserId = 6
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7600),
                            Description = "Keeps your desk neat and organized",
                            IsActive = true,
                            Name = "Desk Organizer",
                            Quantity = 8,
                            UserId = 11
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7603),
                            Description = "Set of three notepads",
                            IsActive = true,
                            Name = "Notepad Set",
                            Quantity = 15,
                            UserId = 11
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7607),
                            Description = "Non-slip yoga mat for workouts",
                            IsActive = true,
                            Name = "Yoga Mat",
                            Quantity = 12,
                            UserId = 10
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 11, 11, 12, 1, 31, 571, DateTimeKind.Local).AddTicks(7610),
                            Description = "Adjustable dumbbells for home workouts",
                            IsActive = true,
                            Name = "Dumbbells Set",
                            Quantity = 3,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("monchotradebackend.models.entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 3,
                            ProductId = 1,
                            Url = "2c2abcc8-d9de-4657-b2ea-9cb6317e35c1.jpg"
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 2,
                            Url = "d8440f61-bf9a-45f8-b18c-e9b7e2d35ba8.jpg"
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 3,
                            Url = "13268719-b95e-4ffa-af40-83b1c7a7a079.jpg"
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 4,
                            Url = "6c97ef84-b64c-4f70-8995-71f8889dd311.png"
                        });
                });

            modelBuilder.Entity("monchotradebackend.models.entities.ProfileImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfileImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Url = "64d3f2dd-200a-49d4-b1ac-cb3541ba22f0.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Url = "bae63af5-6084-465d-b4dc-b6549dee41ee.jpg",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("monchotradebackend.models.entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondLastName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateOnly(1990, 5, 15),
                            Country = "Mexico",
                            Email = "ana.martinezgomez@example.com",
                            LastName = "Martinez",
                            Name = "Ana Luisa",
                            PasswordHash = "$2a$11$gfjCx6sW1juZn/T0phsPneKoF6g3BPE3aaiT3E5zxF9OZ822EaIBW",
                            PhoneNumber = "+52 55 1234 5678",
                            SecondLastName = "Gomez"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateOnly(1985, 8, 22),
                            Country = "Mexico",
                            Email = "carlos.gomezlopez@example.com",
                            LastName = "Gomez",
                            Name = "Carlos",
                            PasswordHash = "$2a$11$sZCxd5XUmOFdinB4cyb3AuD5s4jFgo/WZS3bX1WEsDLIJMdFLm8dW",
                            PhoneNumber = "+52 33 9876 5432",
                            SecondLastName = "Lopez"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateOnly(1992, 3, 10),
                            Country = "Mexico",
                            Email = "miguel.torresramirez@example.com",
                            LastName = "Torres",
                            Name = "Miguel",
                            PasswordHash = "$2a$11$I9cSA2WJ17GhBJsMqLJ.0OZ7SdW5okSPaSxyQnufpaxJs6AnbsxHK",
                            PhoneNumber = "+52 81 5555 4444",
                            SecondLastName = "Ramirez"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateOnly(1988, 11, 5),
                            Country = "Mexico",
                            Email = "laura.rodriguezfernandez@example.com",
                            LastName = "Rodriguez",
                            Name = "Laura",
                            PasswordHash = "$2a$11$Sh3Jht/c2UkF.3eLqcNH5OrvoSNWbmvZGemVwmsJ7iyA3ObbFrHre",
                            PhoneNumber = "+52 55 2222 3333",
                            SecondLastName = "Fernandez"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateOnly(1995, 7, 18),
                            Country = "Mexico",
                            Email = "juan.sanchezmartinez@example.com",
                            LastName = "Sanchez",
                            Name = "Juan Carlos",
                            PasswordHash = "$2a$11$4gMfTnTAWgR3efctsd1bc.bH.upngOnXDKUmjOxnGKW5DrtGoXKEy",
                            PhoneNumber = "+52 33 7777 8888",
                            SecondLastName = "Martinez"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateOnly(1987, 9, 30),
                            Country = "Mexico",
                            Email = "sofia.ramirezcastillo@example.com",
                            LastName = "Ramirez",
                            Name = "Sofia",
                            PasswordHash = "$2a$11$36LVQx3mFA.YTikwy8GUhudLAjUDvhjk3wgIamBm13VodgZ92bVPS",
                            PhoneNumber = "+52 81 4444 5555",
                            SecondLastName = "Castillo"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateOnly(1993, 2, 14),
                            Country = "Mexico",
                            Email = "andres.lopezcastro@example.com",
                            LastName = "Lopez",
                            Name = "Andres",
                            PasswordHash = "$2a$11$Hm2xAG7hgE0Ko1FjRnwyxOGQ8NLAlWSdWaXDI1TiKo2kwjRh9Jp0S",
                            PhoneNumber = "+52 55 6666 7777",
                            SecondLastName = "Castro"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateOnly(1991, 6, 25),
                            Country = "Mexico",
                            Email = "valentina.castroperez@example.com",
                            LastName = "Castro",
                            Name = "Valentina",
                            PasswordHash = "$2a$11$H0N3JVTnTMtftLV95vhKWeiFYKN/AmNMjx0Or5KsEo3cttXyYNTDm",
                            PhoneNumber = "+52 33 1111 2222",
                            SecondLastName = "Perez"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateOnly(1986, 12, 7),
                            Country = "Mexico",
                            Email = "pedro.jimenezmorales@example.com",
                            LastName = "Jimenez",
                            Name = "Pedro",
                            PasswordHash = "$2a$11$0N81239rFtLFro8YApjxzer/5IVqkc/7JI.rUJXV4g1gvpoFRTbTi",
                            PhoneNumber = "+52 81 9999 0000",
                            SecondLastName = "Morales"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateOnly(1994, 4, 12),
                            Country = "Mexico",
                            Email = "mariana.diazherrera@example.com",
                            LastName = "Diaz",
                            Name = "Mariana",
                            PasswordHash = "$2a$11$gHxkFQCybVW.eElflV5KHe43Tzx4T4D3cCXYgQgMy6jZL81aez7lG",
                            PhoneNumber = "+52 55 3333 4444",
                            SecondLastName = "Herrera"
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateOnly(1989, 10, 20),
                            Country = "Mexico",
                            Email = "javier.moralesjimenez@example.com",
                            LastName = "Morales",
                            Name = "Javier",
                            PasswordHash = "$2a$11$0m6mVPUqNDr1Bg/w9A7l6u54XJ2Hi.5nKPgo9sr8GwfajVOwmP.Zm",
                            PhoneNumber = "+52 33 5555 6666",
                            SecondLastName = "Jimenez"
                        },
                        new
                        {
                            Id = 12,
                            BirthDate = new DateOnly(1996, 1, 8),
                            Country = "Mexico",
                            Email = "gabriela.fernandeztorres@example.com",
                            LastName = "Fernandez",
                            Name = "Gabriela",
                            PasswordHash = "$2a$11$VAQ.CNefYApKa.bN6z.QieDsIfCgZCXk4A5ub9LSxeUfIXhhmkyze",
                            PhoneNumber = "+52 81 2222 3333",
                            SecondLastName = "Torres"
                        },
                        new
                        {
                            Id = 13,
                            BirthDate = new DateOnly(1984, 8, 16),
                            Country = "Mexico",
                            Email = "tomas.herreramendoza@example.com",
                            LastName = "Herrera",
                            Name = "Tomas",
                            PasswordHash = "$2a$11$rbaAJgJBxGoUm1tK7R9AF.B1CTQgmrbWl99te4ekBCEyp1a6tLEBi",
                            PhoneNumber = "+52 55 7777 8888",
                            SecondLastName = "Mendoza"
                        },
                        new
                        {
                            Id = 14,
                            BirthDate = new DateOnly(1997, 5, 3),
                            Country = "Mexico",
                            Email = "natalia.mendozarodriguez@example.com",
                            LastName = "Mendoza",
                            Name = "Natalia",
                            PasswordHash = "$2a$11$vsZ5TF45MVPsw1Vzlounre/ngHMR6D.62GL18SBGzYCSy5Sqhrw06",
                            PhoneNumber = "+52 33 4444 5555",
                            SecondLastName = "Rodriguez"
                        },
                        new
                        {
                            Id = 15,
                            BirthDate = new DateOnly(1983, 11, 22),
                            Country = "Mexico",
                            Email = "luis.ruizsanchez@example.com",
                            LastName = "Ruiz",
                            Name = "Luis Fernando",
                            PasswordHash = "$2a$11$XaeV3IlwqaOoA9r54ivFkOlYMZ80K4Wcw.4xsRmOqiZ5ze6ICco6K",
                            PhoneNumber = "+52 81 6666 7777",
                            SecondLastName = "Sanchez"
                        },
                        new
                        {
                            Id = 16,
                            BirthDate = new DateOnly(1990, 7, 7),
                            Country = "Mexico",
                            Email = "elena.gonzalezreyes@example.com",
                            LastName = "Gonzalez",
                            Name = "Elena",
                            PasswordHash = "$2a$11$inAloJfwMfpBJq9KpA/y7eqBXzYfKbSF/VC8DTY3PZLpypc7U.epy",
                            PhoneNumber = "+52 55 8888 9999",
                            SecondLastName = "Reyes"
                        },
                        new
                        {
                            Id = 17,
                            BirthDate = new DateOnly(1986, 3, 19),
                            Country = "Mexico",
                            Email = "ricardo.reyesgarcia@example.com",
                            LastName = "Reyes",
                            Name = "Ricardo",
                            PasswordHash = "$2a$11$83rIGAmCEPQpB38FKW8kuOpnSSMQSGBk8NFQ.cCamth9o.BrUZJ96",
                            PhoneNumber = "+52 33 0000 1111",
                            SecondLastName = "Garcia"
                        },
                        new
                        {
                            Id = 18,
                            BirthDate = new DateOnly(1993, 9, 14),
                            Country = "Mexico",
                            Email = "isabel.garciamoreno@example.com",
                            LastName = "Garcia",
                            Name = "Isabel",
                            PasswordHash = "$2a$11$fiZcfa7l80y1aHItrcu5QOFap2HlUpsfovJbY7vwZpC7OnJ9VCMWC",
                            PhoneNumber = "+52 81 3333 4444",
                            SecondLastName = "Moreno"
                        },
                        new
                        {
                            Id = 19,
                            BirthDate = new DateOnly(1988, 6, 30),
                            Country = "Mexico",
                            Email = "daniel.morenosilva@example.com",
                            LastName = "Moreno",
                            Name = "Daniel",
                            PasswordHash = "$2a$11$0hsN2yS1YJ2OV8c0ch0XXu26xhGeMnFZOS80Br2thgJs9NRF7YZva",
                            PhoneNumber = "+52 55 5555 6666",
                            SecondLastName = "Silva"
                        },
                        new
                        {
                            Id = 20,
                            BirthDate = new DateOnly(1995, 12, 5),
                            Country = "Mexico",
                            Email = "carmen.silvanavarro@example.com",
                            LastName = "Silva",
                            Name = "Carmen",
                            PasswordHash = "$2a$11$onx2AIgKZYaCfirUsf.uFuC0ozGTvK2Evuc0YCJMIEaF.Tyl/mrpG",
                            PhoneNumber = "+52 33 2222 3333",
                            SecondLastName = "Navarro"
                        });
                });

            modelBuilder.Entity("monchotradebackend.models.entities.Exchange", b =>
                {
                    b.HasOne("monchotradebackend.models.entities.Product", "InitiatorProduct")
                        .WithMany()
                        .HasForeignKey("InitiatorProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("monchotradebackend.models.entities.User", "InitiatorUser")
                        .WithMany("InitiatedExchanges")
                        .HasForeignKey("InitiatorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("monchotradebackend.models.entities.Product", "ReceiverProduct")
                        .WithMany()
                        .HasForeignKey("ReceiverProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("monchotradebackend.models.entities.User", "ReceiverUser")
                        .WithMany("ReceivedExchanges")
                        .HasForeignKey("ReceiverUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InitiatorProduct");

                    b.Navigation("InitiatorUser");

                    b.Navigation("ReceiverProduct");

                    b.Navigation("ReceiverUser");
                });

            modelBuilder.Entity("monchotradebackend.models.entities.Product", b =>
                {
                    b.HasOne("monchotradebackend.models.entities.Category", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("monchotradebackend.models.entities.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProductCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("monchotradebackend.models.entities.ProductImage", b =>
                {
                    b.HasOne("monchotradebackend.models.entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("monchotradebackend.models.entities.ProfileImage", b =>
                {
                    b.HasOne("monchotradebackend.models.entities.User", "User")
                        .WithOne("ProfileImage")
                        .HasForeignKey("monchotradebackend.models.entities.ProfileImage", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("monchotradebackend.models.entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("monchotradebackend.models.entities.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("monchotradebackend.models.entities.User", b =>
                {
                    b.Navigation("InitiatedExchanges");

                    b.Navigation("Products");

                    b.Navigation("ProfileImage");

                    b.Navigation("ReceivedExchanges");
                });
#pragma warning restore 612, 618
        }
    }
}
